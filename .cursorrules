# CESI-bot – правила для AI

Контекст: Flask-бот. Ключевые файлы: app.py (/chat, /admin/log-self-test), core/logger.py (init_logging, log_m/log_resp/log, self_test()), core/text_utils.py (finalize_answer, finalize_empathy).
rag_engine.py — чувствительный файл. Разрешены только:
мелкая телеметрия/логи (например, событие prepared_context),
правка параметров (top-k, лимиты, веса),
без рефакторинга функций и структур.

Обязательные запреты:
- Никаких широких рефакторингов. Минимальный diff.
- Не удалять/не переименовывать: init_logging(console=True) в начале app.py; роут /admin/log-self-test; экспорты log_m/log_resp/log в core/logger.py; вызовы finalize_answer/finalize_empathy в /chat.
- Запрещено резать ответы вне финализатора: никаких [:700], [:650], [:220] и т.п. в других местах.
- Нельзя возвращать сырые ответы модели: запрещён прямой return jsonify(raw_llm_dict) в обход нормализации.

Порядок работы:
1) Сначала покажи ПЛАН шагов и список файлов, которые тронешь. Жди «GO».
2) Найди и сообщи опасные шаблоны: [:700], answer_len, прямые return jsonify(raw_llm_dict).
3) Вноси правки с обратной совместимостью импортов (from core.logger import log_m не должен ломаться).
4) Перед return в /chat логируй:
   log_m.info(json.dumps({"ev":"final_answer","len":len(out.get("answer","")), "truncated": bool(cut_a), "cta": bool(out.get("cta",{}).get("show"))}, ensure_ascii=False))
5) Самотест: GET /admin/log-self-test -> {"ok": true}; в logs/minimal_logs.jsonl есть log_self_test и final_answer; ответы короткие.

Лимиты ответов по темам:
- contacts ~300; prices/prices_short/warranty ~420; doctors ~360; consultation ~480; safety/contraindications ~520.
- empathy ≤ 200.
- Для prices/prices_short/contacts/warranty: allow_ellipsis=False (никаких «…» в конце).

Definition of Done:
- Логи пишутся (minimal_logs.jsonl, bot_responses.jsonl), ошибок в errors.log нет.
- Ответы проходят через finalize_answer и соответствуют лимитам, конверсионные заканчиваются точкой.
- В проекте нет срезов ответов вне финализатора и нет старых логов answer_len.
