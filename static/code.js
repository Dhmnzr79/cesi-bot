let sessionId = localStorage.getItem("cesi_session_id") || null;

const greeting = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã<br>–Ø –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏ –¶–≠–°–ò. –†–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ª–µ—á–µ–Ω–∏–µ, –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è, –∏ –æ—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏.<br>–° —á–µ–≥–æ –Ω–∞—á–Ω—ë–º?`;
const topics = [
  { emoji: "üí¨", text: "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é" },
  { emoji: "ü¶∑", text: "–£–∑–Ω–∞—Ç—å –ø—Ä–æ –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—é" },
  { emoji: "üìç", text: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–Ω—ã" },
  { emoji: "üò¨", text: "–ë–æ—é—Å—å –±–æ–ª–∏" }
];

window.addEventListener('DOMContentLoaded', () => {
  showGreetingWithTopics();
  document.getElementById("userInput").placeholder = "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å...";
});

function showGreetingWithTopics() {
  const chat = document.getElementById("chat");
  chat.innerHTML = "";
  appendMessage("bot", greeting);
  const topicsBlock = document.createElement("div");
  topicsBlock.className = "topics-block";
  topics.forEach(topic => {
    const btn = document.createElement("button");
    btn.className = "topic-btn";
    btn.innerHTML = `${topic.emoji} ${topic.text}`;
    btn.onclick = () => {
      sendMessage(topic.text);
      topicsBlock.remove();
      document.getElementById("topics-hint").remove();
    };
    topicsBlock.appendChild(btn);
  });
  chat.appendChild(topicsBlock);
  // –ü–æ—è—Å–Ω–µ–Ω–∏–µ –ø–æ–¥ –∫–Ω–æ–ø–∫–∞–º–∏
  const hint = document.createElement("div");
  hint.className = "topics-hint";
  hint.id = "topics-hint";
  hint.textContent = "–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç–µ ‚Äî —è –æ—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã!";
  chat.appendChild(hint);
}

async function sendMessage(msg = null) {
  const input = document.getElementById("userInput");
  const message = msg || input.value.trim();
  if (!message) return;

  appendMessage("user", message);
  input.value = "";

  try {
    const res = await fetch("/chat", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ message, session_id: sessionId })
    });

    const data = await res.json();
    sessionId = data.session_id;
    localStorage.setItem("cesi_session_id", sessionId);

    appendMessage("bot", data.response);

    if (data.show_booking_button) {
      showLeadFormButton();
    }
  } catch (e) {
    appendMessage("bot", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.");
  }
}

function appendMessage(role, text) {
  const chat = document.getElementById("chat");
  const msg = document.createElement("div");
  msg.className = role;
  msg.innerHTML = text;
  chat.appendChild(msg);
  chat.scrollTop = chat.scrollHeight;
}

function showLeadFormButton() {
  const chat = document.getElementById("chat");
  const existing = document.getElementById("leadButton");
  if (existing) return;
  const btn = document.createElement("button");
  btn.textContent = "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è";
  btn.className = "lead-button";
  btn.id = "leadButton";
  btn.onclick = () => {
    sendMessage("–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è");
    btn.remove();
  };
  chat.appendChild(btn);
}

document.getElementById("sendButton").addEventListener("click", () => sendMessage());
document.getElementById("userInput").addEventListener("keypress", (e) => {
  if (e.key === "Enter") sendMessage();
});
